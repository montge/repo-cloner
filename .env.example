# ============================================================================
# repo-cloner Environment Variables Configuration
# ============================================================================
# Copy this file to .env and fill in your values
# The .env file is automatically loaded by repo-cloner CLI
#
# SECURITY WARNING: Never commit .env to version control!
# The .env file should contain sensitive tokens and credentials.
# ============================================================================

# ----------------------------------------------------------------------------
# Authentication Tokens (REQUIRED for most operations)
# ----------------------------------------------------------------------------

# GitHub Personal Access Token
# Scopes needed: repo, read:org, write:org (if creating repos)
# Generate at: https://github.com/settings/tokens
GITHUB_TOKEN=ghp_your_github_token_here

# GitLab Personal Access Token
# Scopes needed: read_api, read_repository, write_repository
# Generate at: https://gitlab.com/-/profile/personal_access_tokens
GITLAB_TOKEN=glpat_your_gitlab_token_here

# ----------------------------------------------------------------------------
# Platform URLs (OPTIONAL - defaults to public instances)
# ----------------------------------------------------------------------------

# GitLab Instance URL
# Default: https://gitlab.com
# For self-hosted: https://gitlab.example.com
GITLAB_URL=https://gitlab.com

# GitHub Instance URL
# Default: https://github.com
# For GitHub Enterprise: https://github.example.com
GITHUB_URL=https://github.com

# ----------------------------------------------------------------------------
# Repository Sync Configuration (sync-group command)
# ----------------------------------------------------------------------------

# Source GitLab group path (e.g., company/backend)
# Used by: repo-cloner sync-group
GITLAB_SOURCE_GROUP=

# Target GitHub organization name
# Used by: repo-cloner sync-group
GITHUB_TARGET_ORG=

# ----------------------------------------------------------------------------
# Sync Behavior Defaults (OPTIONAL)
# ----------------------------------------------------------------------------

# Repository name mapping strategy
# Options: flatten, prefix, full_path, custom
# Default: flatten
# - flatten: company/backend/auth → company-backend-auth
# - prefix: company/backend/auth → company_auth
# - full_path: company/backend/auth → company/backend/auth
DEFAULT_MAPPING_STRATEGY=flatten

# Separator for flattened repository names
# Default: -
# Example: - produces company-backend-auth
#          _ produces company_backend_auth
DEFAULT_SEPARATOR=-

# Strip root parent group from repository names
# Options: true, false
# Default: false
# Example: true strips "company" from company/backend/auth → backend-auth
DEFAULT_STRIP_PARENT=false

# Keep only last N path levels in repository names
# Default: (empty - keep all levels)
# Example: 2 keeps last 2 levels: company/backend/auth → backend-auth
DEFAULT_KEEP_LAST_N=

# Automatically create missing GitHub repositories
# Options: true, false
# Default: false
# When true: Missing repos are created automatically
# When false: Sync fails if target repo doesn't exist
DEFAULT_AUTO_CREATE=false

# Number of concurrent workers for syncing
# Default: 5
# Higher values = faster but more resource intensive
# Lower values = slower but gentler on APIs
DEFAULT_WORKERS=5

# ----------------------------------------------------------------------------
# Usage Examples
# ----------------------------------------------------------------------------
#
# With .env file configured, you can run commands with minimal arguments:
#
# 1. Simple sync (tokens from .env):
#    repo-cloner sync --source https://gitlab.com/group/repo.git \
#                     --target https://github.com/org/repo.git
#
# 2. Group sync (everything from .env):
#    repo-cloner sync-group
#
# 3. Group sync with overrides:
#    repo-cloner sync-group --source-group different/group
#
# 4. Dry-run to preview:
#    repo-cloner sync-group --dry-run --verbose
#
# Command-line arguments always override environment variables.
#
# ============================================================================
